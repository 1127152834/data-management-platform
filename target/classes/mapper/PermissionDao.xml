<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhang.datamanagementplatform.dao.PermissionDao">

    <resultMap id="RolePermissionMap" type="com.zhang.datamanagementplatform.entity.POJO.VO.RolePermissionVO">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <collection property="role" ofType="com.zhang.datamanagementplatform.entity.DTO.Role">
            <id column="role_id" jdbcType="VARCHAR" property="id"/>
            <result column="role_name" jdbcType="VARCHAR" property="roleName"/>
        </collection>
        <collection property="permission" ofType="com.zhang.datamanagementplatform.entity.DTO.Permission">
            <id column="per_id" jdbcType="VARCHAR" property="id"/>
            <result column="per_src" jdbcType="VARCHAR" property="resource"/>
            <result column="per_act" jdbcType="VARCHAR" property="action"/>
        </collection>
    </resultMap>

    <resultMap id="UserRoleMap" type="com.zhang.datamanagementplatform.entity.POJO.VO.UserRoleVO">
        <id column="u_r_id" jdbcType="VARCHAR" property="id"/>
        <collection property="user" ofType="com.zhang.datamanagementplatform.entity.POJO.PO.UserPO">
            <id column="id" jdbcType="VARCHAR" property="id"/>
            <result column="account" jdbcType="VARCHAR" property="account"/>
            <result column="real_name" jdbcType="VARCHAR" property="realName"/>
            <result column="email" jdbcType="VARCHAR" property="email"/>
            <result column="telephone" jdbcType="VARCHAR" property="telephone"/>
            <result column="website" jdbcType="VARCHAR" property="website"/>
            <result column="create_time" jdbcType="TIMESTAMP" javaType="String" property="createTime"/>
            <result column="update_time" jdbcType="TIMESTAMP" javaType="String" property="updateTime"/>
            <result column="sex" jdbcType="BOOLEAN" property="sex"/>
        </collection>
        <collection property="role" ofType="com.zhang.datamanagementplatform.entity.DTO.Role">
            <id column="r_id" jdbcType="VARCHAR" property="id"/>
            <result column="role_name" jdbcType="VARCHAR" property="roleName"/>
        </collection>
    </resultMap>
    <insert id="insertRole" parameterType="com.zhang.datamanagementplatform.entity.DTO.Role">
        insert into role values(#{role.id},#{role.roleName},current_timestamp())
    </insert>
    <insert id="insertRolePermission" parameterType="com.zhang.datamanagementplatform.entity.POJO.PO.RolePermissionPO">
        insert into role_permission values
        <foreach collection="rolePermissions" item="rolePermission" separator=",">
            (#{rolePermission.id},#{rolePermission.roleId},#{rolePermission.permissionId})
        </foreach>;
    </insert>
    <insert id="insertUserRole">
        insert into user_role values (#{id},#{uid},#{role},current_timestamp())
    </insert>
    <update id="updateUserRole">
        update user_role set role_id = #{role} where user_id=#{uid}
    </update>
    <delete id="delUserAndRole">
        delete from user_role where user_id=#{id}
    </delete>
    <select id="listByUserId" resultType="com.zhang.datamanagementplatform.entity.DTO.Permission">
        SELECT DISTINCT p.*
        FROM permission p
            JOIN(
                    SELECT r_p.*
                    FROM role_permission r_p
                        JOIN(
                                SELECT r.*
                                FROM role r
                                    JOIN user_role u_r
                                        ON r.`id` = u_r.`role_id`
                                WHERE u_r.`user_id` = #{userId}
                            ) r
                            ON r_p.`role_id` = r.id
                ) r_p
                ON p.`id` = r_p.permission_id
    </select>
    <select id="selectRolePermission"
            resultType="com.zhang.datamanagementplatform.entity.POJO.VO.RolePermissionVO"
    resultMap="RolePermissionMap">
       select r_p.id as id,r.id as role_id,r.role_name as role_name,p.id as per_id,
       p.resource as per_src,p.action as per_act
       from role as r join role_permission as r_p on r_p.role_id = r.id
                  join permission as p on r_p.permission_id = p.id;
    </select>
    <select id="selectUserRole" resultType="com.zhang.datamanagementplatform.entity.POJO.VO.UserRoleVO" resultMap="UserRoleMap">
        select u_r.id as u_r_id, u.*,r.id as r_id,r.role_name as role_name
        from user as u join user_role as u_r on u_r.user_id = u.id
        join role as r on u_r.role_id = r.id
        order by u.create_time
    </select>
    <select id="selectRoleByUserRoleId" resultType="com.zhang.datamanagementplatform.entity.DTO.Role">
        select r.* from user_role as u_r join role as r on u_r.role_id = r.id and u_r.user_id=#{id}
    </select>
    <select id="selectPermissions" resultType="com.zhang.datamanagementplatform.entity.DTO.Permission">
        select * from permission order by action;
    </select>
    <select id="selectAllRole" resultType="com.zhang.datamanagementplatform.entity.DTO.Role">
        select * from role order by create_time desc;
    </select>
    <select id="selectUserRoleByUserId"
            resultType="com.zhang.datamanagementplatform.entity.POJO.PO.UserRolePO">
        select * from user_role where user_id = #{uid}
    </select>
    <select id="selectRoleByRoleId" resultType="com.zhang.datamanagementplatform.entity.DTO.Role">
        select * from role where id = #{roleId}
    </select>
</mapper>
